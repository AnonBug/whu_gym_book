{"version":3,"sources":["App.js","index.js"],"names":["Option","Select","App","useState","showSpin","setShowSpin","state","localStorage","getItem","JSON","parse","username","password","gyms","time","email","remember","day","map","item","remainder","timeStr","moment","console","log","className","size","tip","spinning","name","labelCol","span","wrapperCol","initialValues","onFinish","values","num","hour","minute","setItem","stringify","message","info","ipcRenderer","invoke","then","res","success","error","send","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","placeholder","Password","type","mode","value","RangePicker","minuteStep","format","disabledHours","i","push","disabledMinutes","defaultValue","Group","valuePropName","offset","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df788c7.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n/*\n * @Description: contents\n * @Author: zyc\n * @Date: 2021-10-13 19:00:25\n * @LastEditTime: 2021-10-19 11:26:40\n */\nimport { useState } from 'react';\nimport \"./App.css\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Select,\n  TimePicker,\n  message,\n  Radio,\n  Spin,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nfunction App() {\n  const [showSpin, setShowSpin] = useState(false);\n\n  const state = localStorage.getItem(\"info\")\n    ? JSON.parse(localStorage.getItem(\"info\"))\n    : {\n        username: \"\",\n        password: \"\",\n        gyms: [],\n        time: [],\n        email: \"\",\n        remember: false,\n        day: 1,\n      };\n\n  state.time = state.time.map((item) => {\n    const remainder = item % 1;\n    item = item - remainder;\n    let timeStr = \"\" + item + (remainder ? \":30\" : \":00\");\n\n    return moment(timeStr, \"HH:mm\");\n  });\n\n  console.log(\"state\", state);\n\n  // 完成的按钮\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    values.time = values.time.map((moment) => {\n      let num = moment.hour();\n      if (moment.minute() === 30) {\n        num += 0.5;\n      }\n\n      return num;\n    });\n\n    // 更新内容\n    if (values.remember) {\n      localStorage.setItem(\"info\", JSON.stringify(values));\n    }\n\n    if (values.day !== 3) {\n      // 拦截未开放系统时的预约\n      if (values.day === 2 && moment().hour() < 18) {\n        return message.info('明日的预定系统还未开放，可选择【预约明日】');\n      }\n\n      setShowSpin(true);\n      ipcRenderer.invoke(\"gym-book-now\", values).then((res) => {\n        setShowSpin(false);\n\n        if (res) {\n          message.success(\"订场成功！请速去付款~\");\n        } else {\n          message.error(\"八好意思，妹有订到……\");\n        }\n      });\n    } else {\n      // 拦截过期的预定\n      if (moment().hour() >= 18) {\n        return message.info(\"明日的预约系统已开放，如需预定，请选择【立抢明日】\");\n      }\n\n      message.info(\"系统将在 18：00 开抢，请勿关闭客户端。\");\n      ipcRenderer.send(\"gym-book-wait\", values);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"App\">\n      <Spin size=\"large\" tip=\"正在抢场，请稍候……\" spinning={showSpin}>\n        <Form\n          name=\"basic\"\n          className=\"form\"\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          initialValues={{ ...state }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"用户名\"\n            name=\"username\"\n            rules={[{ required: true, message: \"学号！学号啊！\" }]}\n          >\n            <Input placeholder=\"登录预定系统的用户名，通常为学号\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"密码\"\n            name=\"password\"\n            rules={[{ required: true, message: \"不写密码让我拿头登吗\" }]}\n          >\n            <Input.Password placeholder=\"放心，密码不会上传到后台，因为压根就妹有后台……\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"gyms\"\n            label=\"场馆\"\n            rules={[\n              {\n                required: true,\n                message: \"至少选一个啦拜托\",\n                type: \"array\",\n              },\n            ]}\n          >\n            <Select\n              mode=\"multiple\"\n              placeholder=\"该选项是有序的，会优先抢前面的场次\"\n            >\n              <Option value={1}>信体</Option>\n              <Option value={2}>风雨</Option>\n              <Option value={4}>工体</Option>\n              <Option value={10}>卓尔</Option>\n              <Option value={11}>网安</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"time\"\n            label=\"时段\"\n            rules={[\n              { type: \"array\", required: true, message: \"选一下预约时段啦\" },\n            ]}\n          >\n            <TimePicker.RangePicker\n              minuteStep={30}\n              format=\"HH:mm\"\n              placeholder={[\"开始时间\", \"结束时间\"]}\n              disabledHours={() => {\n                const res = [];\n                for (let i = 0; i < 24; i++) {\n                  if (i < 8 || i > 21) {\n                    res.push(i);\n                  }\n                }\n                return res;\n              }}\n              disabledMinutes={(hour) => {\n                // 禁用 9：30 的选择\n                if (hour === 21) return [30];\n              }}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"邮箱\"\n            name=\"email\"\n            rules={[{ required: true, message: \"你猜我会不会千里传音？\" }]}\n          >\n            <Input\n              placeholder=\"接收预定结果，通常只有成功时才会发消息\"\n              defaultValue={state.email}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label=\"日期\"\n            name=\"day\"\n            rules={[{ required: true, message: \"你猜我会不会千里传音？\" }]}\n          >\n            <Radio.Group defaultValue={1}>\n              <Radio value={1}>立抢今日</Radio>\n              <Radio value={2}>立抢明日</Radio>\n              <Radio value={3}>预约明日</Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item\n            name=\"remember\"\n            valuePropName=\"checked\"\n            wrapperCol={{ offset: 6, span: 18 }}\n          >\n            <Checkbox>记住当前配置</Checkbox>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 6, span: 18 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              开始预定\n            </Button>\n          </Form.Item>\n        </Form>\n\n        <div className=\"tips\">\n          <h4>说明：</h4>\n          <ul>\n            <li>本系统为佛系杯抢场使用，请勿商用</li>\n            <li>需为校园网，或 vpn 环境</li>\n            <li className=\"highlight\">\n              选择预约明日时，系统会在18：00开抢，请勿关闭客户端\n            </li>\n            <li className=\"highlight\">\n              本系统只负责提交订单，需要自行在系统内支付\n            </li>\n          </ul>\n        </div>\n        <div className=\"license\">\n          drived by electron + puppeteer + react @anonbug\n        </div>\n      </Spin>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n * @Description: contents\n * @Author: zyc\n * @Date: 2021-10-13 19:00:25\n * @LastEditTime: 2021-10-13 19:07:47\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
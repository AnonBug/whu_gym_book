{"version":3,"sources":["App.js","index.js"],"names":["Option","Select","App","state","localStorage","getItem","JSON","parse","username","password","gyms","time","email","remember","day","map","item","remainder","timeStr","moment","console","log","className","name","labelCol","span","wrapperCol","initialValues","onFinish","values","num","hour","minute","setItem","stringify","ipcRenderer","invoke","then","res","message","success","error","info","send","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","placeholder","Password","type","mode","value","RangePicker","minuteStep","format","disabledHours","i","push","disabledMinutes","defaultValue","Group","valuePropName","offset","htmlType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a599888d.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n/*\n * @Description: contents\n * @Author: zyc\n * @Date: 2021-10-13 19:00:25\n * @LastEditTime: 2021-10-14 11:50:57\n */\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Select,\n  TimePicker,\n  message,\n  Radio,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nfunction App() {\n  const state = localStorage.getItem(\"info\")\n    ? JSON.parse(localStorage.getItem(\"info\"))\n    : {\n        username: \"\",\n        password: \"\",\n        gyms: [],\n        time: [],\n        email: \"\",\n        remember: false,\n        day: 1,\n      };\n\n  state.time = state.time.map((item) => {\n    const remainder = item % 1;\n    item = item - remainder;\n    let timeStr = \"\" + item + (remainder ? \":30\" : \":00\");\n\n    return moment(timeStr, \"HH:mm\");\n  });\n\n  console.log(\"state\", state);\n\n  // 完成的按钮\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    values.time = values.time.map((moment) => {\n      let num = moment.hour();\n      if (moment.minute() === 30) {\n        num += 0.5;\n      }\n\n      return num;\n    });\n\n    // 更新内容\n    if (values.remember) {\n      localStorage.setItem(\"info\", JSON.stringify(values));\n    }\n\n    if (values.day !== 3) {\n      ipcRenderer.invoke(\"gym-book-now\", values).then((res) => {\n        if (res) {\n          message.success(\"订场成功！请速去付款~\");\n        } else {\n          message.error(\"八好意思，订场失败……\");\n        }\n      });\n    } else {\n      message.info(\"系统将在 18：00 开抢，请勿关闭客户端。\")\n      ipcRenderer.send(\"gym-book-wait\", values);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"App\">\n      <Form\n        name=\"basic\"\n        className=\"form\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 18 }}\n        initialValues={{ ...state }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[{ required: true, message: \"学号！学号啊！\" }]}\n        >\n          <Input placeholder=\"登录预定系统的用户名，通常为学号\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[{ required: true, message: \"不写密码让我拿头登吗\" }]}\n        >\n          <Input.Password placeholder=\"密码不会上传到后台，因为妹有后台……\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"gyms\"\n          label=\"场馆\"\n          rules={[\n            {\n              required: true,\n              message: \"至少选一个啦拜托\",\n              type: \"array\",\n            },\n          ]}\n        >\n          <Select\n            mode=\"multiple\"\n            placeholder=\"该选项是有序的，会优先抢前面的场次\"\n          >\n            <Option value={1}>信体</Option>\n            <Option value={2}>风雨</Option>\n            <Option value={4}>工体</Option>\n            <Option value={10}>卓尔</Option>\n            <Option value={11}>网安</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"time\"\n          label=\"时段\"\n          rules={[\n            { type: \"array\", required: true, message: \"选一下预约时段啦\" },\n          ]}\n        >\n          <TimePicker.RangePicker\n            minuteStep={30}\n            format=\"HH:mm\"\n            placeholder={[\"开始时间\", \"结束时间\"]}\n            disabledHours={() => {\n              const res = [];\n              for (let i = 0; i < 24; i++) {\n                if (i < 8 || i > 21) {\n                  res.push(i);\n                }\n              }\n              return res;\n            }}\n            disabledMinutes={(hour) => {\n              // 禁用 9：30 的选择\n              if (hour === 21) return [30];\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"邮箱\"\n          name=\"email\"\n          rules={[{ required: true, message: \"你猜我会不会千里传音？\" }]}\n        >\n          <Input\n            placeholder=\"接收预定结果，通常只有成功时才会发消息\"\n            defaultValue={state.email}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"日期\"\n          name=\"day\"\n          rules={[{ required: true, message: \"你猜我会不会千里传音？\" }]}\n        >\n          <Radio.Group defaultValue={1}>\n            <Radio value={1}>立抢今日</Radio>\n            <Radio value={2}>立抢明日</Radio>\n            <Radio value={3}>预约明日</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol={{ offset: 6, span: 18 }}\n        >\n          <Checkbox>记住当前配置</Checkbox>\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 6, span: 18 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            开始预定\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <div className=\"tips\">\n        <h3>说明：</h3>\n        <p>本系统为佛系杯抢场使用，请勿商用。</p>\n        <ul>\n          <li>需为校园网，或 vpn 环境</li>\n          <li className=\"highlight\">选择预约明日时，系统会在18：00开抢，请勿关闭客户端</li>\n        </ul>\n      </div>\n      <div className=\"license\">\n        drived by electron + puppeteer + react @anonbug\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/*\n * @Description: contents\n * @Author: zyc\n * @Date: 2021-10-13 19:00:25\n * @LastEditTime: 2021-10-13 19:07:47\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}